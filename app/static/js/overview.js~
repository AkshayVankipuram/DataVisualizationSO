var width = document.getElementById('chartContainer').offsetWidth,
    height = document.getElementById('chartContainer').offsetHeight,
    diameter = Math.min(width - 50,height - 50),
    margin = {top: 10, left: 40, bottom: 10, right: 40},
    format = d3.format(",d"),
    color = d3.scale.linear()
                .domain([-1, 5])
                .range(["hsl(152,80%,80%)", "hsl(228,30%,40%)"])
                .interpolate(d3.interpolateHcl);

var bubble = d3.layout.pack()
    .sort(null)
    .size([diameter, diameter])
    .padding(1.5)
    .value(function(d) { return d.size; });

var svg = d3.select("#chartContainer").append("svg")
    .attr("width", width)
    .attr("height", height)
    .attr("class", "bubble")
    .append('g')
    .attr('transform','translate('+(margin.left)+','+(margin.top)+')');

queue().defer(d3.json,$SCRIPT_ROOT+"/static/resources/cluster_counts.json")
    .await(function(err,root) { drawCirclePacking(svg,root); });

function drawCirclePacking(svg,root) {

    var focus = root,
        nodes = bubble.nodes(root),
        view;

    var node = svg.selectAll(".node")
          .data(nodes)
          .filter(function(d) { return !(d.name == 'java'); })
        .enter().append("g")
          .attr("class", function(d) { return d.children ? "node" : "leaf node"})
          .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

    node.append("circle")
            //.attr("r", function(d) { return d.r; })
            .style('fill', function(d) { return color(d.depth); })
            .style("fill-opacity", function(d) { return d.parent ? 0.6 : 0.3; })
            .on('click', function(d) {
                return zoom(focus == d ? root : d);
            });

    d3.select('#chartContainer')
        .style("background", color(-1))
        .on('click', function() { zoom(root); });

    /*node.append("text")
        .attr("dy", ".3em")
        .style("text-anchor", "middle")
        .text(function(d) { 
            return d.className; 
        });*/
    

    
    function classes(root) {
        var classes = [];
        root.children.forEach(function(d) {
            classes.push({ packageName: 'java', className: d.name, value: d.size });
        });
        return {children: classes};
    }

}
